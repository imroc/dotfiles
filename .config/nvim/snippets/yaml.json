{
  "net-debug": {
    "prefix": [
      "netdebug"
    ],
    "description": "net-debug deployment template",
    "body": [
      "apiVersion: apps/v1",
      "kind: Deployment",
      "metadata:",
      "  name: netdebug",
      "spec:",
      "  replicas: 1",
      "  selector:",
      "    matchLabels:",
      "      app: netdebug",
      "  template:",
      "    metadata:",
      "      labels:",
      "        app: netdebug",
      "    spec:",
      "      containers:",
      "        - name: netdebug",
      "          image: imroc/net-debug:latest",
      "          securityContext:",
      "            privileged: true",
      "            runAsUser: 0"
    ]
  },
  "docker-kubectl": {
    "prefix": [
      "kctl"
    ],
    "description": "docker-kubectl deployment template",
    "body": [
      "apiVersion: apps/v1",
      "kind: Deployment",
      "metadata:",
      "  name: kubectl",
      "  namespace: kube-system",
      "spec:",
      "  replicas: 1",
      "  selector:",
      "    matchLabels:",
      "      app: kubectl",
      "  template:",
      "    metadata:",
      "      labels:",
      "        app: kubectl",
      "    spec:",
      "      serviceAccountName: kubectl-admin",
      "      containers:",
      "      - name: kubectl",
      "        image: imroc/kubectl:slim",
      "        imagePullPolicy: Always",
      "        securityContext:",
      "          privileged: true",
      "          runAsUser: 0",
      "",
      "---",
      "apiVersion: v1",
      "kind: ServiceAccount",
      "metadata:",
      "  name: kubectl-admin",
      "  namespace: kube-system",
      "",
      "---",
      "apiVersion: rbac.authorization.k8s.io/v1",
      "kind: ClusterRole",
      "metadata:",
      "  name: kubectl-admin",
      "rules:",
      "- apiGroups: [\"*\"]",
      "  resources: [\"*\"]",
      "  verbs: [\"*\"]",
      "",
      "---",
      "apiVersion: rbac.authorization.k8s.io/v1",
      "kind: ClusterRoleBinding",
      "metadata:",
      "  name: kubectl-admin",
      "subjects:",
      "- kind: ServiceAccount",
      "  name: kubectl-admin",
      "  namespace: kube-system",
      "roleRef:",
      "  kind: ClusterRole",
      "  name: kubectl-admin",
      "  apiGroup: rbac.authorization.k8s.io"
    ]
  },
  "deployment template": {
    "prefix": [
      "dp"
    ],
    "description": "deployment template",
    "body": [
      "apiVersion: apps/v1",
      "kind: Deployment",
      "metadata:",
      "  name: ${1:nginx}",
      "spec:",
      "  replicas: 1",
      "  selector:",
      "    matchLabels:",
      "      app: ${1:nginx}",
      "  template:",
      "    metadata:",
      "      labels:",
      "        app: ${1:nginx}",
      "    spec:",
      "      containers:",
      "      - name: ${1:nginx}",
      "        image: ${2:nginx:latest}",
      "",
      "---",
      "$0"
    ]
  },
  "daemonset template": {
    "prefix": [
      "ds"
    ],
    "description": "daemonset template",
    "body": [
      "apiVersion: apps/v1",
      "kind: DaemonSet",
      "metadata:",
      "  name: ${1:nginx}",
      "spec:",
      "  selector:",
      "    matchLabels:",
      "      app: ${1:nginx}",
      "  template:",
      "    metadata:",
      "      labels:",
      "        app: ${1:nginx}",
      "    spec:",
      "      containers:",
      "      - name: ${1:nginx}",
      "        image: ${2:nginx:latest}",
      "",
      "---",
      "$0"
    ]
  },
  "statefulset template": {
    "prefix": [
      "sts"
    ],
    "description": "statefulset template",
    "body": [
      "apiVersion: apps/v1",
      "kind: StatefulSet",
      "metadata:",
      "  name: ${1:nginx}",
      "spec:",
      "  replicas: 1",
      "  serviceName: ${1:nginx}",
      "  selector:",
      "    matchLabels:",
      "      app: ${1:nginx}",
      "  template:",
      "    metadata:",
      "      labels:",
      "        app: ${1:nginx}",
      "    spec:",
      "      containers:",
      "        - name: ${1:nginx}",
      "          image: ${2:nginx:latest}",
      "          volumeMounts:",
      "          - name: www",
      "            mountPath: /usr/share/nginx/html",
      "    volumeClaimTemplates:",
      "    - metadata:",
      "        name: www",
      "      spec:",
      "        accessModes: [ \"ReadWriteOnce\" ]",
      "        storageClassName: \"cbs\"",
      "        resources:",
      "          requests:",
      "            storage: 10Gi",
      "",
      "---",
      "$0"
    ]
  },
  "ambient namespace label": {
    "prefix": [
      "ambientns"
    ],
    "description": "ambient namespace label",
    "body": [
      "istio.io/dataplane-mode: ambient"
    ]
  },
  "sidecar inject namespace label": {
    "prefix": [
      "injectsidecar"
    ],
    "description": "inject sidecar namespace label",
    "body": [
      "istio-injection: enabled"
    ]
  },
  "eks label selector": {
    "prefix": [
      "eksnode"
    ],
    "description": "eks label selector",
    "body": [
      "node.kubernetes.io/instance-type: eklet"
    ]
  },
  "eks gpu-type annotation": {
    "prefix": [
      "gputype"
    ],
    "description": "eks gpu-type annotation",
    "body": [
      "eks.tke.cloud.tencent.com/gpu-type: \"T4,V100,A10*PNV4,A10*GNV4,A10*GNV4v\""
    ]
  }
}
